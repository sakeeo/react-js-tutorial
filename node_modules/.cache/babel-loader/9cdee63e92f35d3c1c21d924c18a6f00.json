{"ast":null,"code":"var _jsxFileName = \"/home/sakeeo/Dev/github/simple-app/src/Component/InvinityScroll.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ScrollComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Movies: [],\n      totalResults: 0,\n      Response: false,\n      loading: false,\n      page: 1,\n      pCari: 'Batman',\n      prevY: 1\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies(this.state.page, this.state.pCari);\n    var options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 1.0\n    };\n    this.observer = new IntersectionObserver(this.handleObserver.bind(this), options);\n    this.observer.observe(this.loadingRef);\n  }\n\n  handleObserver(entities, observer) {\n    const y = entities[0].boundingClientRect.y;\n\n    if (this.state.prevY > y) {\n      const lastMovie = this.state.movies[this.state.movies.length - 1];\n      const curPage = lastMovie.albumId;\n      this.getMovies(curPage);\n      this.setState({\n        page: curPage\n      });\n    }\n\n    this.setState({\n      prevY: y\n    });\n  }\n\n  getMovies(pCari, page) {\n    this.setState({\n      loading: true\n    });\n    axios.get(`http://www.omdbapi.com/?apikey=faf7e5bb&s=${pCari}&page=${page}`).then(res => {\n      this.setState({\n        movies: res.data.Search,\n        totalResults: res.data.totalResults,\n        Response: res.data.Response\n      });\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    // Additional css\n    const loadingCSS = {\n      height: \"100px\",\n      margin: \"30px\"\n    }; // To change the loading icon behavior\n\n    const loadingTextCSS = {\n      display: this.state.loading ? \"block\" : \"none\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minHeight: \"800px\"\n        },\n        children: this.state.movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster,\n          height: \"100px\",\n          width: \"200px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: loadingRef => this.loadingRef = loadingRef,\n        style: loadingCSS,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: loadingTextCSS,\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ScrollComponent;","map":{"version":3,"sources":["/home/sakeeo/Dev/github/simple-app/src/Component/InvinityScroll.js"],"names":["React","Component","axios","ScrollComponent","constructor","state","Movies","totalResults","Response","loading","page","pCari","prevY","componentDidMount","getMovies","options","root","rootMargin","threshold","observer","IntersectionObserver","handleObserver","bind","observe","loadingRef","entities","y","boundingClientRect","lastMovie","movies","length","curPage","albumId","setState","get","then","res","data","Search","render","loadingCSS","height","margin","loadingTextCSS","display","minHeight","map","movie","poster"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass ScrollComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Movies: [],\n      totalResults:0,\n      Response:false,\n      loading: false,\n      page: 1,\n      pCari:'Batman',\n      prevY: 1\n    };\n  }\n  \n  componentDidMount() {\n    this.getMovies(this.state.page,this.state.pCari);\n    var options = {\n     root: null,\n     rootMargin: \"0px\",\n     threshold: 1.0\n   };\n   this.observer = new IntersectionObserver(\n     this.handleObserver.bind(this),\n     options\n   );\n   this.observer.observe(this.loadingRef);\n  }\n  \n  handleObserver(entities, observer) {\n\n    const y = entities[0].boundingClientRect.y;\n    if (this.state.prevY > y) {\n      const lastMovie = this.state.movies[this.state.movies.length - 1];\n      const curPage = lastMovie.albumId;\n      this.getMovies(curPage);\n      this.setState({ page: curPage });\n    }\n    this.setState({ prevY: y });\n\n  }\n  \n  getMovies(pCari,page) {\n    this.setState({ loading: true });\n    axios\n      .get(`http://www.omdbapi.com/?apikey=faf7e5bb&s=${pCari}&page=${page}`)\n      .then(res => {\n        this.setState({\n          movies       :res.data.Search,\n          totalResults :res.data.totalResults,\n          Response     :res.data.Response\n        })\n        this.setState({ loading: false });\n      });\n  }\n\n  render() {\n    // Additional css\n    const loadingCSS = {\n      height: \"100px\",\n      margin: \"30px\"\n    };\n\n    // To change the loading icon behavior\n    const loadingTextCSS = { display: this.state.loading ? \"block\" : \"none\" };\n\n    return (\n      <div className=\"container\">\n        <div style={{ minHeight: \"800px\" }}>\n          {this.state.movies.map(movie => (\n            <img src={movie.poster} height=\"100px\" width=\"200px\" />\n          ))}\n        </div>\n\n        <div\n          ref={loadingRef => (this.loadingRef = loadingRef)}\n          style={loadingCSS}\n        >\n          <span style={loadingTextCSS}>Loading...</span>\n        </div>\n      </div>\n    );\n\n  }\n}\nexport default ScrollComponent;\n"]},"metadata":{},"sourceType":"module"}