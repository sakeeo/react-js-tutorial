{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function useBookSearch(query, pageNumber) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  useEffect(() => {\n    setBooks([]);\n  }, [query]);\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    axios({\n      method: 'GET',\n      url: 'http://openlibrary.org/search.json',\n      params: {\n        q: query,\n        page: pageNumber\n      },\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setBooks(prevBooks => {\n        return [...new Set([...prevBooks, ...res.data.docs.map(b => b.title)])];\n      });\n      setHasMore(res.data.docs.length > 0);\n      setLoading(false);\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      setError(true);\n    });\n    return () => cancel();\n  }, [query, pageNumber]);\n  return {\n    loading,\n    error,\n    books,\n    hasMore\n  };\n}\n\n_s(useBookSearch, \"ZrgSCruHI183llBUUEUcEU7ZUkA=\");","map":{"version":3,"sources":["/home/sakeeo/Dev/github/react-js-tutorial/src/Component/useBookSearch.js"],"names":["useEffect","useState","axios","useBookSearch","query","pageNumber","loading","setLoading","error","setError","books","setBooks","hasMore","setHasMore","cancel","method","url","params","q","page","cancelToken","CancelToken","c","then","res","prevBooks","Set","data","docs","map","b","title","length","catch","e","isCancel"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,UAA9B,EAA0C;AAAA;;AACvD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFQ,EAEN,CAACP,KAAD,CAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,QAAIK,MAAJ;AACAZ,IAAAA,KAAK,CAAC;AACJa,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,oCAFD;AAGJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,CAAC,EAAEd,KAAL;AAAYe,QAAAA,IAAI,EAAEd;AAAlB,OAHJ;AAIJe,MAAAA,WAAW,EAAE,IAAIlB,KAAK,CAACmB,WAAV,CAAsBC,CAAC,IAAIR,MAAM,GAAGQ,CAApC;AAJT,KAAD,CAAL,CAKGC,IALH,CAKQC,GAAG,IAAI;AACbb,MAAAA,QAAQ,CAACc,SAAS,IAAI;AACpB,eAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,SAAJ,EAAe,GAAGD,GAAG,CAACG,IAAJ,CAASC,IAAT,CAAcC,GAAd,CAAkBC,CAAC,IAAIA,CAAC,CAACC,KAAzB,CAAlB,CAAR,CAAJ,CAAP;AACD,OAFO,CAAR;AAGAlB,MAAAA,UAAU,CAACW,GAAG,CAACG,IAAJ,CAASC,IAAT,CAAcI,MAAd,GAAuB,CAAxB,CAAV;AACAzB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXD,EAWG0B,KAXH,CAWSC,CAAC,IAAI;AACZ,UAAIhC,KAAK,CAACiC,QAAN,CAAeD,CAAf,CAAJ,EAAuB;AACvBzB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAdD;AAeA,WAAO,MAAMK,MAAM,EAAnB;AACD,GApBQ,EAoBN,CAACV,KAAD,EAAQC,UAAR,CApBM,CAAT;AAsBA,SAAO;AAAEC,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBE,IAAAA,KAAlB;AAAyBE,IAAAA;AAAzB,GAAP;AACD;;GAjCuBT,a","sourcesContent":["import { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport default function useBookSearch(query, pageNumber) {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [books, setBooks] = useState([])\n  const [hasMore, setHasMore] = useState(false)\n\n  useEffect(() => {\n    setBooks([])\n  }, [query])\n\n  useEffect(() => {\n    setLoading(true)\n    setError(false)\n    let cancel\n    axios({\n      method: 'GET',\n      url: 'http://openlibrary.org/search.json',\n      params: { q: query, page: pageNumber },\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setBooks(prevBooks => {\n        return [...new Set([...prevBooks, ...res.data.docs.map(b => b.title)])]\n      })\n      setHasMore(res.data.docs.length > 0)\n      setLoading(false)\n    }).catch(e => {\n      if (axios.isCancel(e)) return\n      setError(true)\n    })\n    return () => cancel()\n  }, [query, pageNumber])\n\n  return { loading, error, books, hasMore }\n}\n"]},"metadata":{},"sourceType":"module"}