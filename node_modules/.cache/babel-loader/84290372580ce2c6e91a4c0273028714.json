{"ast":null,"code":"var _jsxFileName = \"/home/sakeeo/Dev/github/react-js-tutorial/src/Pages/FindMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport useMovieSearch from '../Component/useMovieSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FindMovies() {\n  _s();\n\n  const [query, setQuery] = useState('Batman');\n  const [pageNumber, setPageNumber] = useState(1);\n  const {\n    movies,\n    hasMore,\n    loading,\n    error\n  } = useMovieSearch(query, pageNumber);\n  const observer = useRef();\n  const lastElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  function handleSearch(e) {\n    setQuery(e.target.value);\n    setPageNumber(1);\n  }\n\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), movies.map((movie, index) => {\n      if (movies.length === index + 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lastElementRef,\n          children: movie\n        }, movie, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: movie\n        }, movie, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 18\n        }, this);\n      }\n    }), console.log(movies), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading && 'Loading...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error && 'Error'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FindMovies, \"l3XEjsvef/NKFavNEMWc46cXrds=\", false, function () {\n  return [useMovieSearch];\n});\n\n_c = FindMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindMovies\");","map":{"version":3,"sources":["/home/sakeeo/Dev/github/react-js-tutorial/src/Pages/FindMovies.js"],"names":["React","useState","useRef","useCallback","useMovieSearch","FindMovies","query","setQuery","pageNumber","setPageNumber","movies","hasMore","loading","error","observer","lastElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","handleSearch","e","target","value","console","log","map","movie","index","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,QAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM;AACJS,IAAAA,MADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA;AAJI,MAKFT,cAAc,CAACE,KAAD,EAAQE,UAAR,CALlB;AAOA,QAAMM,QAAQ,GAAGZ,MAAM,EAAvB;AACA,QAAMa,cAAc,GAAGZ,WAAW,CAACa,IAAI,IAAI;AACzC,QAAIJ,OAAJ,EAAa;AACb,QAAIE,QAAQ,CAACG,OAAb,EAAsBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AACtBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AACrD,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BV,OAAjC,EAA0C;AACxCF,QAAAA,aAAa,CAACa,cAAc,IAAIA,cAAc,GAAG,CAApC,CAAb;AACD;AACF,KAJkB,CAAnB;AAKA,QAAIN,IAAJ,EAAUF,QAAQ,CAACG,OAAT,CAAiBM,OAAjB,CAAyBP,IAAzB;AACX,GATiC,EAS/B,CAACJ,OAAD,EAAUD,OAAV,CAT+B,CAAlC;;AAWA,WAASa,YAAT,CAAsBC,CAAtB,EAAyB;AACvBlB,IAAAA,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAlB,IAAAA,aAAa,CAAC,CAAD,CAAb;AACD;;AAEDmB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEJ,KAA1B;AAAiC,MAAA,QAAQ,EAAEkB;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,EAGGd,MAAM,CAACoB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5B,UAAItB,MAAM,CAACuB,MAAP,KAAkBD,KAAK,GAAG,CAA9B,EAAiC;AAC/B,4BAAO;AAAK,UAAA,GAAG,EAAEjB,cAAV;AAAA,oBAAuCgB;AAAvC,WAA+BA,KAA/B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEO;AACL,4BAAO;AAAA,oBAAkBA;AAAlB,WAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KANA,CAHH,EAWGH,OAAO,CAACC,GAAR,CAAYnB,MAAZ,CAXH,eAaE;AAAA,gBAAME,OAAO,IAAI;AAAjB;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAA,gBAAMC,KAAK,IAAI;AAAf;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AAkBD;;GAhDuBR,U;UASlBD,c;;;KATkBC,U","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\nimport useMovieSearch from '../Component/useMovieSearch'\n\nexport default function FindMovies() {\n  const [query, setQuery] = useState('Batman')\n  const [pageNumber, setPageNumber] = useState(1)\n\n  const {\n    movies,\n    hasMore,\n    loading,\n    error\n  } = useMovieSearch(query, pageNumber)\n\n  const observer = useRef()\n  const lastElementRef = useCallback(node => {\n    if (loading) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loading, hasMore])\n\n  function handleSearch(e) {\n    setQuery(e.target.value)\n    setPageNumber(1)\n  }\n  \n  console.log(movies);\n\n  return (\n    <>\n      <input type=\"text\" value={query} onChange={handleSearch}></input>\n      \n      {movies.map((movie, index) => {\n        if (movies.length === index + 1) {\n          return <div ref={lastElementRef} key={movie}>{movie}</div>\n        } else {\n          return <div key={movie}>{movie}</div>\n        }\n      })}\n      \n      {console.log(movies)}\n      \n      <div>{loading && 'Loading...'}</div>\n      <div>{error && 'Error'}</div>\n    </>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}