{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default function useMovieSearch(query, pageNumber) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  useEffect(() => {\n    setMovies([]);\n  }, [query]);\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    let cancel;\n    axios({\n      method: 'GET',\n      url: 'http://www.omdbapi.com/?apikey=faf7e5bb',\n      params: {\n        s: query,\n        page: pageNumber\n      },\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setBooks(prevMovies => {\n        return [...new Set([...prevMovies, ...res.data.Search.map(b => b.Title)])];\n      });\n      setHasMore(res.data.Search.length > 0);\n      setLoading(false);\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      setError(true);\n    });\n    return () => cancel();\n  }, [query, pageNumber]);\n  return {\n    loading,\n    error,\n    movies,\n    hasMore\n  };\n}\n\n_s(useMovieSearch, \"PZBdoqEy748sESPMwzmoEDQiuno=\");","map":{"version":3,"sources":["/home/sakeeo/Dev/github/react-js-tutorial/src/Component/useMovieSearch.js"],"names":["useEffect","useState","axios","useMovieSearch","query","pageNumber","loading","setLoading","error","setError","movies","setMovies","hasMore","setHasMore","cancel","method","url","params","s","page","cancelToken","CancelToken","c","then","res","setBooks","prevMovies","Set","data","Search","map","b","Title","length","catch","e","isCancel"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,UAA/B,EAA2C;AAAA;;AACxD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAFQ,EAEN,CAACP,KAAD,CAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,QAAIK,MAAJ;AACAZ,IAAAA,KAAK,CAAC;AACJa,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,yCAFD;AAGJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,CAAC,EAAEd,KAAL;AAAYe,QAAAA,IAAI,EAAEd;AAAlB,OAHJ;AAIJe,MAAAA,WAAW,EAAE,IAAIlB,KAAK,CAACmB,WAAV,CAAsBC,CAAC,IAAIR,MAAM,GAAGQ,CAApC;AAJT,KAAD,CAAL,CAKGC,IALH,CAKQC,GAAG,IAAI;AACbC,MAAAA,QAAQ,CAACC,UAAU,IAAI;AACrB,eAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,UAAJ,EAAgB,GAAGF,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBC,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,KAA3B,CAAnB,CAAR,CAAJ,CAAP;AACD,OAFO,CAAR;AAGAnB,MAAAA,UAAU,CAACW,GAAG,CAACI,IAAJ,CAASC,MAAT,CAAgBI,MAAhB,GAAyB,CAA1B,CAAV;AACA1B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXD,EAWG2B,KAXH,CAWSC,CAAC,IAAI;AACZ,UAAIjC,KAAK,CAACkC,QAAN,CAAeD,CAAf,CAAJ,EAAuB;AACvB1B,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAdD;AAeA,WAAO,MAAMK,MAAM,EAAnB;AACD,GApBQ,EAoBN,CAACV,KAAD,EAAQC,UAAR,CApBM,CAAT;AAqBA,SAAO;AAAEC,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBE,IAAAA,MAAlB;AAA0BE,IAAAA;AAA1B,GAAP;AACD;;GAhCuBT,c","sourcesContent":["import { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nexport default function useMovieSearch(query, pageNumber) {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [movies, setMovies] = useState([])\n  const [hasMore, setHasMore] = useState(false)\n\n  useEffect(() => {\n    setMovies([])\n  }, [query])\n\n  useEffect(() => {\n    setLoading(true)\n    setError(false)\n    let cancel\n    axios({\n      method: 'GET',\n      url: 'http://www.omdbapi.com/?apikey=faf7e5bb',\n      params: { s: query, page: pageNumber },\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setBooks(prevMovies => {\n        return [...new Set([...prevMovies, ...res.data.Search.map(b => b.Title)])]\n      })\n      setHasMore(res.data.Search.length > 0)\n      setLoading(false)\n    }).catch(e => {\n      if (axios.isCancel(e)) return\n      setError(true)\n    })\n    return () => cancel()\n  }, [query, pageNumber])\n  return { loading, error, movies, hasMore }\n}\n"]},"metadata":{},"sourceType":"module"}